{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Documents/Brainstation/Moodify/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Documents/Brainstation/Moodify/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Documents/Brainstation/Moodify/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Documents/Brainstation/Moodify/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/Documents/Brainstation/Moodify/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/Documents/Brainstation/Moodify/frontend/src/Upload.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nvar Upload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Upload, _Component);\n\n  function Upload() {\n    _classCallCheck(this, Upload);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Upload).apply(this, arguments));\n  }\n\n  _createClass(Upload, [{\n    key: \"render\",\n    // renderIframe(spotifyData) {\n    //     if (spotifyData != null) {\n    //       let randomresult=  getRandomInt(spotifyData.body.playlists.items.length - 1)\n    //         let id = spotifyData.body.playlists.items[randomresult].id;\n    //         let title = spotifyData.body.playlists.items[randomresult].name;\n    //         // console.log(spotifyData.body.playlists)\n    //         // console.log(spotifyData.body.playlists.items[0].id);\n    //         return <div> \n    //             <h1>{title}</h1>\n    //             <iframe allow=\"geolocation\" src={`https://open.spotify.com/embed/user/spotify/playlist/${id}`} width=\"700\" height=\"680\" frameborder=\"1\" allowtransparency=\"true\"></iframe> \n    //         </div>\n    //     }\n    // }\n    value: function render() {\n      // let stats= this.props.data;\n      return React.createElement(\"div\", {\n        className: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Enter Your URL here:\"), React.createElement(\"form\", {\n        onSubmit: this.props.submitform,\n        className: \"comments__form\",\n        id: \"comment-form\",\n        action: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"comment\",\n        placeholder: \"Enter the image address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"comments__form--button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"cancel\",\n        type: \"reset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"CANCEL\"), React.createElement(Link, {\n        to: \"/player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"SUBMIT\")))));\n    }\n  }]);\n\n  return Upload;\n}(Component);\n\nexport { Upload as default };","map":{"version":3,"sources":["/Users/mac/Documents/Brainstation/Moodify/frontend/src/Upload.js"],"names":["React","Component","Link","Upload","props","submitform"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;IAEqBC,M;;;;;;;;;;;;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BACO;AACP;AACA,aACA;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAO,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,UAA5B;AAAwC,QAAA,SAAS,EAAC,gBAAlD;AAAmE,QAAA,EAAE,EAAG,cAAxE;AAAuF,QAAA,MAAM,EAAC,EAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,SAAxB;AAAkC,QAAA,WAAW,EAAC,yBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,IAAI,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEG,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmB;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAnB,CAFH,CAFJ,CAFJ,CADA;AAeD;;;;EAhCiCJ,S;;SAAfE,M","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class Upload extends Component {\r\n\r\n    // renderIframe(spotifyData) {\r\n    //     if (spotifyData != null) {\r\n    //       let randomresult=  getRandomInt(spotifyData.body.playlists.items.length - 1)\r\n    //         let id = spotifyData.body.playlists.items[randomresult].id;\r\n    //         let title = spotifyData.body.playlists.items[randomresult].name;\r\n    //         // console.log(spotifyData.body.playlists)\r\n    //         // console.log(spotifyData.body.playlists.items[0].id);\r\n    //         return <div> \r\n    //             <h1>{title}</h1>\r\n    //             <iframe allow=\"geolocation\" src={`https://open.spotify.com/embed/user/spotify/playlist/${id}`} width=\"700\" height=\"680\" frameborder=\"1\" allowtransparency=\"true\"></iframe> \r\n    //         </div>\r\n    //     }\r\n    // }\r\n  render() {\r\n    // let stats= this.props.data;\r\n    return (\r\n    <div className=\"upload\">\r\n        <h1>Enter Your URL here:</h1>\r\n        <form  onSubmit={this.props.submitform} className=\"comments__form\" id = \"comment-form\" action=\"\" >\r\n            <input type=\"text\" name=\"comment\" placeholder=\"Enter the image address\"/>\r\n            <div className=\"comments__form--button\">\r\n                <button className=\"cancel\" type=\"reset\">CANCEL</button>\r\n               <Link to=\"/player\"><button type=\"submit\">SUBMIT</button></Link>\r\n            </div>\r\n        </form>\r\n\r\n        {/* <img id=\"photo\"/> */}\r\n        {/* { this.renderIframe(stats.spotify) } */}\r\n    </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}