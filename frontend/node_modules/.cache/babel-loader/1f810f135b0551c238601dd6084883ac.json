{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Documents/Brainstation/landon-ta-brainflix/sprint1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Documents/Brainstation/landon-ta-brainflix/sprint1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Documents/Brainstation/landon-ta-brainflix/sprint1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Documents/Brainstation/landon-ta-brainflix/sprint1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/Documents/Brainstation/landon-ta-brainflix/sprint1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/Documents/Brainstation/landon-ta-brainflix/sprint1/src/pages/Fetching.js\";\nimport React, { Component } from 'react';\nvar API_KEY = '406d1d67-cd68-4d5f-be46-11656b50339d';\nvar baseUrl = 'https://project-2-api.herokuapp.com/';\nvar endpoint = \"videos\";\nvar queryString = \"?api_key=\" + API_KEY;\n\nvar Fetching =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Fetching, _Component);\n\n  function Fetching() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Fetching);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Fetching)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      serverdata: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(Fetching, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(baseUrl + endpoint + queryString).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data); //now we wanna put in the sate=> set state\n\n        _this2.setState({\n          //now we have data\n          serverdata: data,\n          //no longer loading this is the date it contains\n          isloading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"fetching\"));\n    }\n  }]);\n\n  return Fetching;\n}(Component);\n\nexport { Fetching as default };","map":{"version":3,"sources":["/Users/mac/Documents/Brainstation/landon-ta-brainflix/sprint1/src/pages/Fetching.js"],"names":["React","Component","API_KEY","baseUrl","endpoint","queryString","Fetching","state","serverdata","loading","fetch","then","response","json","data","console","log","setState","isloading"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAMC,OAAO,GAAG,sCAAhB;AACA,IAAMC,OAAO,GAAG,sCAAhB;AACA,IAAMC,QAAQ,GAAE,QAAhB;AACA,IAAMC,WAAW,GAAE,cAAcH,OAAjC;;IAGqBI,Q;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,OAAO,EAAE;AAFL,K;;;;;;wCAIY;AAAA;;AAChBC,MAAAA,KAAK,CAACP,OAAO,GAAEC,QAAT,GAAoBC,WAArB,CAAL,CACCM,IADD,CACM,UAAAC,QAAQ;AAAA,eAAKA,QAAQ,CAACC,IAAT,EAAL;AAAA,OADd,EAECF,IAFD,CAEO,UAAAG,IAAI,EAAI;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADe,CAEf;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AACd;AACAT,UAAAA,UAAU,EAAEM,IAFE;AAGd;AACAI,UAAAA,SAAS,EAAE;AAJG,SAAd;AAMF,OAXE;AAYH;;;6BACQ;AAGT,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD;;;;EA3BmCjB,S;;SAAjBK,Q","sourcesContent":["import React, { Component } from 'react'\n\nconst API_KEY = '406d1d67-cd68-4d5f-be46-11656b50339d';\nconst baseUrl = 'https://project-2-api.herokuapp.com/';\nconst endpoint= \"videos\";\nconst queryString= \"?api_key=\" + API_KEY;\n\n\nexport default class Fetching extends Component {\n    state = {\n        serverdata: [],\n        loading: true\n    }\n    componentDidMount() {\n        fetch(baseUrl+ endpoint + queryString)\n        .then(response  => response.json())\n        .then (data => {\n        console.log(data);\n        //now we wanna put in the sate=> set state\n        this.setState({\n        //now we have data\n        serverdata: data,\n        //no longer loading this is the date it contains\n        isloading: false\n        })\n     });\n    } \n    render() {\n        \n  \n    return (\n      <div>\n        <h1>fetching</h1>\n      </div>\n    )\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}