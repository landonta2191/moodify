{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Documents/Brainstation/Moodify/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Documents/Brainstation/Moodify/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Documents/Brainstation/Moodify/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Documents/Brainstation/Moodify/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/Documents/Brainstation/Moodify/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/Documents/Brainstation/Moodify/frontend/src/Upload.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nexport default withRouter(\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Upload, _Component);\n\n  function Upload() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Upload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Upload)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      _this.props.submitform(e);\n\n      _this.props.history.push('/player');\n    };\n\n    return _this;\n  }\n\n  _createClass(Upload, [{\n    key: \"renderIframe\",\n    value: function renderIframe(spotifyData) {\n      if (spotifyData != null) {\n        var randomresult = getRandomInt(spotifyData.body.playlists.items.length - 1);\n        var id = spotifyData.body.playlists.items[randomresult].id;\n        var title = spotifyData.body.playlists.items[randomresult].name; // console.log(spotifyData.body.playlists)\n        // console.log(spotifyData.body.playlists.items[0].id);\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, title), React.createElement(\"iframe\", {\n          allow: \"geolocation\",\n          src: \"https://open.spotify.com/embed/user/spotify/playlist/\".concat(id),\n          width: \"700\",\n          height: \"680\",\n          frameborder: \"1\",\n          allowtransparency: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stats = this.props.data;\n      return React.createElement(\"div\", {\n        className: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Enter Your URL here:\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: \"comments__form\",\n        id: \"comment-form\",\n        action: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"comment\",\n        placeholder: \"Enter the image address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"comments__form--button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"cancel\",\n        type: \"reset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"CANCEL\"), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"SUBMIT\")), React.createElement(\"img\", {\n        src: this.props.imgsrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), this.renderIframe(stats.spotify));\n    }\n  }]);\n\n  return Upload;\n}(Component));\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}","map":{"version":3,"sources":["/Users/mac/Documents/Brainstation/Moodify/frontend/src/Upload.js"],"names":["React","Component","Link","withRouter","handleSubmit","e","props","submitform","history","push","spotifyData","randomresult","getRandomInt","body","playlists","items","length","id","title","name","stats","data","imgsrc","renderIframe","spotify","max","Math","floor","random"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,kBAA/B;AAEA,eAAeA,UAAU;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UAerBC,YAfqB,GAeN,UAACC,CAAD,EAAO;AAClB,YAAKC,KAAL,CAAWC,UAAX,CAAsBF,CAAtB;;AACA,YAAKC,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AACH,KAlBoB;;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAERC,WAFQ,EAEK;AACtB,UAAIA,WAAW,IAAI,IAAnB,EAAyB;AACvB,YAAIC,YAAY,GAAGC,YAAY,CAACF,WAAW,CAACG,IAAZ,CAAiBC,SAAjB,CAA2BC,KAA3B,CAAiCC,MAAjC,GAA0C,CAA3C,CAA/B;AACE,YAAIC,EAAE,GAAGP,WAAW,CAACG,IAAZ,CAAiBC,SAAjB,CAA2BC,KAA3B,CAAiCJ,YAAjC,EAA+CM,EAAxD;AACA,YAAIC,KAAK,GAAGR,WAAW,CAACG,IAAZ,CAAiBC,SAAjB,CAA2BC,KAA3B,CAAiCJ,YAAjC,EAA+CQ,IAA3D,CAHqB,CAIrB;AACA;;AACA,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,KAAL,CADG,EAEH;AAAQ,UAAA,KAAK,EAAC,aAAd;AAA4B,UAAA,GAAG,iEAA0DD,EAA1D,CAA/B;AAA+F,UAAA,KAAK,EAAC,KAArG;AAA2G,UAAA,MAAM,EAAC,KAAlH;AAAwH,UAAA,WAAW,EAAC,GAApI;AAAwI,UAAA,iBAAiB,EAAC,MAA1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFG,CAAP;AAIH;AACJ;AAdoB;AAAA;AAAA,6BAmBZ;AACT,UAAIG,KAAK,GAAE,KAAKd,KAAL,CAAWe,IAAtB;AACA,aACA;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAO,QAAA,QAAQ,EAAE,KAAKjB,YAAtB;AAAoC,QAAA,SAAS,EAAC,gBAA9C;AAA+D,QAAA,EAAE,EAAG,cAApE;AAAmF,QAAA,MAAM,EAAC,EAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,SAAxB;AAAkC,QAAA,WAAW,EAAC,yBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,IAAI,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,EAEG;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFH,CAFJ,EAMI;AAAK,QAAA,GAAG,EAAG,KAAKE,KAAL,CAAWgB,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CAFJ,EAYM,KAAKC,YAAL,CAAkBH,KAAK,CAACI,OAAxB,CAZN,CADA;AAgBD;AArCsB;;AAAA;AAAA,EAAsBvB,SAAtB,EAAzB;;AAwCA,SAASW,YAAT,CAAsBa,GAAtB,EAA2B;AACvB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA3B,CAAP;AACD","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link, withRouter} from \"react-router-dom\";\r\n\r\nexport default withRouter(class Upload extends Component {\r\n\r\n    renderIframe(spotifyData) {\r\n        if (spotifyData != null) {\r\n          let randomresult=  getRandomInt(spotifyData.body.playlists.items.length - 1)\r\n            let id = spotifyData.body.playlists.items[randomresult].id;\r\n            let title = spotifyData.body.playlists.items[randomresult].name;\r\n            // console.log(spotifyData.body.playlists)\r\n            // console.log(spotifyData.body.playlists.items[0].id);\r\n            return <div> \r\n                <h1>{title}</h1>\r\n                <iframe allow=\"geolocation\" src={`https://open.spotify.com/embed/user/spotify/playlist/${id}`} width=\"700\" height=\"680\" frameborder=\"1\" allowtransparency=\"true\"></iframe> \r\n            </div>\r\n        }\r\n    }\r\n    handleSubmit = (e) => {\r\n        this.props.submitform(e);\r\n        this.props.history.push('/player');\r\n    }\r\n    render() {\r\n    let stats= this.props.data;\r\n    return (\r\n    <div className=\"upload\">\r\n        <h1>Enter Your URL here:</h1>\r\n        <form  onSubmit={this.handleSubmit} className=\"comments__form\" id = \"comment-form\" action=\"\" >\r\n            <input type=\"text\" name=\"comment\" placeholder=\"Enter the image address\"/>\r\n            <div className=\"comments__form--button\">\r\n               <button className=\"cancel\" type=\"reset\">CANCEL</button>\r\n               <button type=\"submit\">SUBMIT</button>\r\n            </div>\r\n            <img src= {this.props.imgsrc}/>\r\n        </form>\r\n\r\n        {/* <img id=\"photo\"/> */}\r\n        { this.renderIframe(stats.spotify) }\r\n    </div>\r\n    )\r\n  }\r\n})\r\n\r\nfunction getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}