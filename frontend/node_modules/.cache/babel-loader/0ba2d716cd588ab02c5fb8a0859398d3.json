{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Documents/Brainstation/Moodify/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Documents/Brainstation/Moodify/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Documents/Brainstation/Moodify/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Documents/Brainstation/Moodify/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/Documents/Brainstation/Moodify/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/Documents/Brainstation/Moodify/frontend/src/Player.js\";\nimport React, { Component } from 'react';\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Player, _Component);\n\n  function Player() {\n    _classCallCheck(this, Player);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Player).apply(this, arguments));\n  }\n\n  _createClass(Player, [{\n    key: \"renderIframe\",\n    value: function renderIframe(spotifyData) {\n      if (spotifyData != null) {\n        var randomresult = getRandomInt(spotifyData.body.playlists.items.length - 1);\n        var id = spotifyData.body.playlists.items[randomresult].id;\n        var title = spotifyData.body.playlists.items[randomresult].name;\n        return React.createElement(\"div\", {\n          className: \"playpage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, title), React.createElement(\"iframe\", {\n          allow: \"geolocation\",\n          src: \"https://open.spotify.com/embed/user/spotify/playlist/\".concat(id),\n          width: \"700\",\n          height: \"680\",\n          frameborder: \"1\",\n          allowtransparency: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var stats = this.props.data;\n      var data = [{\n        name: 'anger',\n        value: stats.microsoft[0].faceAttributes.emotion.anger\n      }, {\n        name: 'contempt',\n        value: stats.microsoft[0].faceAttributes.emotion.contempt\n      }, {\n        name: 'disgust',\n        value: stats.microsoft[0].faceAttributes.emotion.disgust\n      }, {\n        name: 'fear',\n        value: stats.microsoft[0].faceAttributes.emotion.fear\n      }, {\n        name: 'hapiness',\n        value: stats.microsoft[0].faceAttributes.emotion.hapiness\n      }, {\n        name: 'neutral',\n        value: stats.microsoft[0].faceAttributes.emotion.neutral\n      }, {\n        name: 'sadness',\n        value: stats.microsoft[0].faceAttributes.emotion.sadness\n      }, {\n        name: 'surprise',\n        value: stats.microsoft[0].faceAttributes.emotion.surprise\n      }];\n      console.log(stats);\n      return React.createElement(\"div\", {\n        className: \"player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"overplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"mainimage\",\n        src: this.props.imgsrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(BarChart, {\n        width: 730,\n        height: 250,\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(XAxis, {\n        dataKey: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"pv\",\n        fill: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Bar, {\n        dataKey: \"uv\",\n        fill: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }))), this.renderIframe(stats.spotify));\n    }\n  }]);\n\n  return Player;\n}(Component);\n\nexport { Player as default };\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}","map":{"version":3,"sources":["/Users/mac/Documents/Brainstation/Moodify/frontend/src/Player.js"],"names":["React","Component","Player","spotifyData","randomresult","getRandomInt","body","playlists","items","length","id","title","name","stats","props","data","value","microsoft","faceAttributes","emotion","anger","contempt","disgust","fear","hapiness","neutral","sadness","surprise","console","log","imgsrc","renderIframe","spotify","max","Math","floor","random"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Player extends Component {\n    renderIframe(spotifyData) {\n        if (spotifyData != null) {\n          let randomresult=  getRandomInt(spotifyData.body.playlists.items.length - 1)\n            let id = spotifyData.body.playlists.items[randomresult].id;\n            let title = spotifyData.body.playlists.items[randomresult].name;\n            return <div className=\"playpage\"> \n                <h1>{title}</h1>\n                <iframe allow=\"geolocation\" src={`https://open.spotify.com/embed/user/spotify/playlist/${id}`} width=\"700\" height=\"680\" frameborder=\"1\" allowtransparency=\"true\"></iframe> \n            </div>\n        }\n    }\n  render() {\n    let stats= this.props.data;\n    let data = [\n      { name: 'anger', value: stats.microsoft[0].faceAttributes.emotion.anger },\n      { name: 'contempt', value: stats.microsoft[0].faceAttributes.emotion.contempt},\n      { name: 'disgust', value: stats.microsoft[0].faceAttributes.emotion.disgust },\n      { name: 'fear', value: stats.microsoft[0].faceAttributes.emotion.fear},\n      { name: 'hapiness', value: stats.microsoft[0].faceAttributes.emotion.hapiness },\n      { name: 'neutral', value: stats.microsoft[0].faceAttributes.emotion.neutral },\n      { name: 'sadness', value: stats.microsoft[0].faceAttributes.emotion.sadness },\n      { name: 'surprise', value: stats.microsoft[0].faceAttributes.emotion.surprise },\n    ]\n\n    console.log(stats);\n    return (\n      <div className=\"player\">\n        <div class=\"overplay\">\n            {/* <img className=\"playbutton\" src=\"https://hanslodge.com/images/6Tp5aga7c.png\" alt=\"Video thumbnail\" /> */}\n            <img className=\"mainimage\" src= {this.props.imgsrc}/>\n            <BarChart width={730} height={250} \n            data={data}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"pv\" fill=\"#8884d8\" />\n                <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n            </BarChart>\n        </div>        \n        { this.renderIframe(stats.spotify) }\n      </div>\n    )\n  }\n}\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }"]},"metadata":{},"sourceType":"module"}