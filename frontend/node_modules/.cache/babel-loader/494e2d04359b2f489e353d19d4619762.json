{"ast":null,"code":"import _classCallCheck from \"/Users/mac/Documents/Brainstation/landon-ta-brainflix/sprint2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Documents/Brainstation/landon-ta-brainflix/sprint2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Documents/Brainstation/landon-ta-brainflix/sprint2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Documents/Brainstation/landon-ta-brainflix/sprint2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/Documents/Brainstation/landon-ta-brainflix/sprint2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/Documents/Brainstation/landon-ta-brainflix/sprint2/src/pages/CommentSection.js\";\nimport React, { Component } from 'react';\nimport SingleComment from \"./SingleComment\";\nvar API_KEY = '406d1d67-cd68-4d5f-be46-11656b50339d';\nvar baseUrl = 'https://project-2-api.herokuapp.com/';\nvar endpoint = \"/videos/\";\nvar queryString = \"/?api_key=\" + API_KEY;\n\nvar CommentSection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentSection, _Component);\n\n  function CommentSection() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentSection);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentSection)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      issubmit: false\n    };\n\n    _this.submitcomment = function (e) {\n      e.preventDefault();\n      debugger;\n      var body = {\n        comment: _this.submitForm.comment.value\n      };\n      var init = {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        headers: {\n          \"content-type\": \"application/json\"\n        }\n      };\n      fetch(baseUrl + endpoint + _this.props.match.params.id + queryString, init).then(function (resp) {\n        return resp.json();\n      }).then(function (data) {\n        debugger;\n        console.log(data);\n\n        _this.setState({\n          issubmit: true\n        });\n      }).catch(error);\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.singleVideo.comments);\n      var commentslist = this.props.singleVideo.comments;\n      console.log(commentslist);\n      var commentsElements = commentslist.map(function (comments) {\n        return React.createElement(SingleComment, {\n          id: comments.id,\n          name: comments.name,\n          comment: comments.comment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"section\", {\n        className: \"comments__section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comments__section--form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"user\",\n        src: \"/Assets/Images/donaldson.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        className: \"comments__form\",\n        id: \"comment-form\",\n        action: \"\",\n        ref: function ref(form) {\n          return _this2.submitForm = form;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"comment\",\n        placeholder: \"Add a public comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"comments__form--button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"cancel\",\n        type: \"click\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"CANCEL\"), React.createElement(\"button\", {\n        onlick: this.submitcomment,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"COMMENT\")))), React.createElement(\"div\", {\n        className: \"comments__section--display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"user\",\n        src: \"/Assets/Images/donaldson.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"show\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, commentsElements)));\n    }\n  }]);\n\n  return CommentSection;\n}(Component);\n\nexport default CommentSection;","map":{"version":3,"sources":["/Users/mac/Documents/Brainstation/landon-ta-brainflix/sprint2/src/pages/CommentSection.js"],"names":["React","Component","SingleComment","API_KEY","baseUrl","endpoint","queryString","CommentSection","state","issubmit","submitcomment","e","preventDefault","body","comment","submitForm","value","init","method","JSON","stringify","headers","fetch","props","match","params","id","then","resp","json","data","console","log","setState","catch","error","singleVideo","comments","commentslist","commentsElements","map","name","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SingleComment from \"./SingleComment\";\n\n\nconst API_KEY = '406d1d67-cd68-4d5f-be46-11656b50339d';\nconst baseUrl = 'https://project-2-api.herokuapp.com/';\nconst endpoint= \"/videos/\";\nconst queryString= \"/?api_key=\" + API_KEY;\n\nclass CommentSection extends Component {\n\nstate = {\n  issubmit: false\n}\n\n  submitcomment = (e) => {\n    e.preventDefault();\n    debugger;\n     const body= {\n       comment: this.submitForm.comment.value,\n     }\n     const init = {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: {\n        \"content-type\": \"application/json\"\n    }\n\n    };\n    fetch(baseUrl+ endpoint + this.props.match.params.id + queryString, init)\n    .then(resp => resp.json())\n    .then(data => {\n      debugger;\n      console.log(data);\n      this.setState({\n        issubmit: true\n      })\n   })\n   .catch(error)\n\n  }\n  \n\n  \n  \n    render() {\n      console.log(this.props.singleVideo.comments)\n      let commentslist = this.props.singleVideo.comments;\n      console.log(commentslist)\n      const commentsElements = commentslist.map((comments) => { \n        return<SingleComment\n        id= {comments.id}\n        name= {comments.name}\n        comment= {comments.comment}\n        />\n        });\n      return (\n        <section className=\"comments__section\">\n          <div className=\"comments__section--form\">\n            <img className=\"user\" src=\"/Assets/Images/donaldson.jpg\" ></img>\n            <form className=\"comments__form\" id = \"comment-form\" action=\"\" ref={form => (this.submitForm = form)} >\n                  <input type=\"text\" name=\"comment\" placeholder=\"Add a public comment\"/>\n                  <div className=\"comments__form--button\">\n                    <button className=\"cancel\" type=\"click\">CANCEL</button>\n                    <button onlick={this.submitcomment} type=\"submit\">COMMENT</button>\n                  </div>\n            </form>\n          </div>\n          <div className=\"comments__section--display\">\n          <img className=\"user\" src=\"/Assets/Images/donaldson.jpg\" ></img>\n            <div className=\"show\">\n              {commentsElements}\n            </div>\n          </div>\n        </section>\n      );\n    }\n  }\n\n\n  \n  export default CommentSection;"]},"metadata":{},"sourceType":"module"}